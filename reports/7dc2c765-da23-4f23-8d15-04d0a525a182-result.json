{"name": "test_calories_with_string_or_alphanumeric_as_input", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Inputs are string or alphanumeric\nassert False", "trace": "self = <test_cases.test_calorie_count.Test_001 object at 0x000001B972BAC6A0>\n\n    @pytest.mark.xfail\n    def test_calories_with_string_or_alphanumeric_as_input(self):\n        file = self.test_calorie_sheet()\n        df = pd.read_excel(file)\n        print(df)\n        protein, carbs, dietry_fiber, fat, alcohol, expected = df.iloc[4].tolist()\n        print(df.iloc[4].tolist())\n        val = Test_001.is_number(protein, carbs, dietry_fiber, fat, alcohol)\n        protein1, carbs2, dietry_fiber3, fat4, alcohol5, expected6 = df.iloc[5].tolist()\n        print(df.iloc[5].tolist())\n        another_val = Test_001.is_number(protein1, carbs2, dietry_fiber3, fat4, alcohol5)\n        print(f'Val is {val} and another_val is {another_val}')\n        if val == True and another_val == True:\n            assert True\n        elif val == False and another_val == False:\n>           assert False, \"Inputs are string or alphanumeric\"\nE           AssertionError: Inputs are string or alphanumeric\nE           assert False\n\ntest_calorie_count.py:94: AssertionError"}, "start": 1695824414642, "stop": 1695824414648, "uuid": "516e4a35-9193-4938-90d4-eeb4b900a55d", "historyId": "b7002870f886cc46f12494889b326da9", "testCaseId": "b7002870f886cc46f12494889b326da9", "fullName": "test_calorie_count.Test_001#test_calories_with_string_or_alphanumeric_as_input", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "suite", "value": "test_calorie_count"}, {"name": "subSuite", "value": "Test_001"}, {"name": "host", "value": "Priya-Lenovo"}, {"name": "thread", "value": "27784-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_calorie_count"}]}